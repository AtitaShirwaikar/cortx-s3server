---
- name: S3 dev vm setup
  hosts: s3devvm
  remote_user: root
  gather_facts: yes
  vars:
    kernel_rpm: kernel-3.10.0-514.el7.x86_64.rpm
    kernel_devel_rpm: kernel-devel-3.10.0-514.el7.x86_64.rpm
    kernel_headers_rpm: kernel-headers-3.10.0-514.el7.x86_64.rpm
    kernel_tools_rpm: kernel-tools-3.10.0-514.el7.x86_64.rpm
    kernel_tools_libs_rpm: kernel-tools-libs-3.10.0-514.el7.x86_64.rpm
    kernel_tools_libs_devel_rpm: kernel-tools-libs-devel-3.10.0-514.el7.x86_64.rpm
    lustre_client_rpm: lustre-client-2.7.18.4-3.10.0_514.16.1.el7.x86_64_g9b76e4c.x86_64.rpm
    lustre_client_devel_rpm: lustre-client-devel-2.7.18.4-3.10.0_514.16.1.el7.x86_64_g9b76e4c.x86_64.rpm
    kmod_lustre_client_rpm: kmod-lustre-client-2.7.18.4-3.10.0_514.16.1.el7.x86_64_g9b76e4c.x86_64.rpm
    gmock_rpm: gmock-1.7.0-1.el7.centos.x86_64.rpm
    gmock_devel_rpm: gmock-devel-1.7.0-1.el7.centos.x86_64.rpm
    gtest_rpm: gtest-1.7.0-2.el7.centos.x86_64.rpm
    gtest_devel_rpm: gtest-devel-1.7.0-2.el7.centos.x86_64.rpm
    bazel_rpm: bazel-0.11.1-1.el7.centos.x86_64.rpm
    git_clang_format_rpm: git-clang-format-6.0-1.el7.centos.x86_64.rpm
    python34_wheel_rpm: python34-wheel-0.24.0-2.el7.centos.noarch.rpm
    python34_jmespath_rpm: python34-jmespath-0.9.0-1.el7.centos.noarch.rpm
    python34_xmltodict_rpm: python34-xmltodict-0.9.0-1.el7.centos.noarch.rpm
    python34_botocore_rpm: python34-botocore-1.6.0-1.el7.centos.noarch.rpm
    python34_s3transfer_rpm: python34-s3transfer-0.1.10-1.el7.centos.noarch.rpm
    python34_boto3_rpm: python34-boto3-1.4.6-1.el7.centos.noarch.rpm
    s3cmd_patched_rpm: s3cmd-1.6.1-1.el7.centos.noarch.rpm
  tasks:

      - name: Copy kernel rpms to configured node
        copy:
          src: files/kernel
          dest: /tmp/s3devkernel

      - name: Copy s3-deps rpms to configured node
        copy:
          src: files/s3-deps
          dest: /tmp/

      - name: Install kernel rpms
        yum: pkg={{item}} state=installed
        with_items:
          - /tmp/s3devkernel/kernel/{{ kernel_rpm }}
          - /tmp/s3devkernel/kernel/{{ kernel_headers_rpm }}
          - /tmp/s3devkernel/kernel/{{ kernel_tools_rpm }}
          - /tmp/s3devkernel/kernel/{{ kernel_tools_libs_rpm }}
          - /tmp/s3devkernel/kernel/{{ kernel_tools_libs_devel_rpm }}

      - name: Install kernel-devel package, work around since later version is available on VM
        command: yum install /tmp/s3devkernel/kernel/{{ kernel_devel_rpm }} -y | /bin/true

      - name: Copy lustre rpms to configured node
        copy:
          src: files/lustre
          dest: /tmp/s3devvmsetup

      - name: Install lustre client rpm
        yum:
          name: /tmp/s3devvmsetup/lustre/{{ lustre_client_rpm }}
          state: present
      - name: Install lustre client devel rpm
        yum:
          name: /tmp/s3devvmsetup/lustre/{{ lustre_client_devel_rpm }}
          state: present
      - name: Install kmod lustre client rpm
        yum:
          name: /tmp/s3devvmsetup/lustre/{{ kmod_lustre_client_rpm }}
          state: present

      - name: Configure lnet
        template:
          src: templates/lnet.conf
          dest: /etc/modprobe.d/lnet.conf

      - name: Add the lnet module
        modprobe:
          name: lnet
          state: present

      - name: Enable modprobe lnet on reboot
        lineinfile:
          path: /etc/modules-load.d/lnet.conf
          line: 'lnet'
          create: yes

      - name: Configure lnet
        command: lctl net up

      - name: Enable lnet up on reboot
        lineinfile:
          path: /etc/profile
          line: 'lctl net up'

      - name: Test lnet
        command: lctl list_nids

      - name: Install development utils and setup epel repo
        yum: pkg={{item}} state=installed
        with_items:
          - git
          - wget
          - epel-release

      - name: Install mero development utils
        yum: pkg={{item}} state=installed
        with_items:
          - asciidoc
          - attr
          - autoconf
          - automake
          - binutils-devel
          - expect
          - facter
          - gcc
          - gcc-c++
          - gccxml
          - cmake
          - genders
          - glibc-headers
          - libaio-devel
          - libtool
          - libuuid-devel
          - libyaml
          - libyaml-devel
          - perl-autodie
          - perl-File-Find-Rule
          - perl-File-Slurp
          - perl-IO-All
          - perl-List-MoreUtils
          - perl-XML-LibXML
          - perl-YAML-LibYAML
          - psmisc
          - python-devel
          - python-ply
          - PyYAML
          - rpm-build
          - ruby
          - rubygem-net-ssh
          - systemd-devel
          - time

      - name: Install S3 development build tools
        yum: pkg={{item}} state=installed
        with_items:
          - java-1.8.0-openjdk
          - java-1.8.0-openjdk-devel
          - epel-release
          - maven
          - unzip
          - clang

      - name: Install S3 development runtime dependencies
        yum: pkg={{item}} state=installed
        with_items:
          - libuv-devel
          - openldap-servers
          - openldap-clients
          - zlib-devel

      - name: Install S3 development build time dependencies
        yum: pkg={{item}} state=installed
        with_items:
          - openssl
          - openssl-libs
          - openssl-devel
          - libxml2
          - libxml2-devel
          - libyaml
          - libyaml-devel
          - yaml-cpp
          - yaml-cpp-devel
          - gflags
          - gflags-devel
          - glog
          - glog-devel

      - name: Install Python and dependencies
        yum: pkg={{item}} state=installed
        with_items:
          - python34
          - python34-pip
          - python34-setuptools
          - python34-dateutil
          - python34-devel
          - python34-yaml
          # - xmltodict
          # - boto3
          # - botocore
          - python34-scripttest

      - name: Install python modules required by S3 system tests and s3 (iam) auth cli
        yum: pkg={{item}} state=installed
        with_items:
          - /tmp/s3-deps/{{ python34_wheel_rpm }}
          - /tmp/s3-deps/{{ python34_jmespath_rpm }}
          - /tmp/s3-deps/{{ python34_xmltodict_rpm }}
          - /tmp/s3-deps/{{ python34_botocore_rpm }}
          - /tmp/s3-deps/{{ python34_s3transfer_rpm }}
          - /tmp/s3-deps/{{ python34_boto3_rpm }}

      - name: Clone S3 source code
        git:
          repo: 'http://gerrit-sage.dco.colo.seagate.com:8080/s3server'
          dest: /seagate/source/s3server
          version: master
          force: yes

      - name: Add mappings to /etc/hosts
        blockinfile:
          path: /etc/hosts
          block: |
            {{ item.ip }} {{ item.name }}
          marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
        with_items:
          - { name: seagatebucket.s3.seagate.com, ip: 127.0.0.1 }
          - { name: seagate-bucket.s3.seagate.com, ip: 127.0.0.1 }
          - { name: seagatebucket123.s3.seagate.com, ip: 127.0.0.1 }
          - { name: seagate.bucket.s3.seagate.com, ip: 127.0.0.1 }
          - { name: s3-us-west-2.seagate.com, ip: 127.0.0.1 }
          - { name: seagatebucket.s3-us-west-2.seagate.com, ip: 127.0.0.1 }
          - { name: iam.seagate.com, ip: 127.0.0.1 }
          - { name: sts.seagate.com, ip: 127.0.0.1 }
          - { name: s3.seagate.com, ip: 127.0.0.1 }

      - name: Install nginx
        yum:
          name: nginx
          state: present

      - name: Enable http port in selinux
        command: setsebool httpd_can_network_connect on -P

      - name: Setup nginx config
        copy:
          src: /seagate/source/s3server/scripts/nginx/nginx.conf.seagate
          remote_src: yes
          dest: /etc/nginx/nginx.conf
        notify:
          - restart nginx

      - name: Install bazel rpm
        yum:
          name: /tmp/s3-deps/{{ bazel_rpm }}
          state: present

      - name: Install patched s3cmd
        yum:
          name: /tmp/s3-deps/{{ s3cmd_patched_rpm }}
          state: present

      - name: Install gtest and gtest-devel rpm
        yum: pkg={{item}} state=installed
        with_items:
          - /tmp/s3-deps/{{ gtest_rpm }}
          - /tmp/s3-deps/{{ gtest_devel_rpm }}

      - name: Install gmock and gmock-devel rpm
        yum: pkg={{item}} state=installed
        with_items:
          - /tmp/s3-deps/{{ gmock_rpm }}
          - /tmp/s3-deps/{{ gmock_devel_rpm }}

      - name: Install git_clang_format_rpm rpm
        yum: pkg={{item}} state=installed
        with_items:
          - /tmp/s3-deps/{{ git_clang_format_rpm }}

      - name: Setup openldap configuration
        command: cd /seagate/source/s3server/scripts/ldap && ./setup_ldap.sh --defaultpasswd || cd -

  handlers:
      - name: restart nginx
        service:
          name: nginx
          state: restarted

---
- name: Copy s3-deps rpms to configured node
  copy:
    src: files/s3-deps
    dest: /tmp/

- name: Copy lustre rpms to configured node
  copy:
    src: files/lustre
    dest: /tmp/s3devvmsetup

- name: Install lustre rpms
  yum: pkg={{item}} state=present
  with_items:
    - /tmp/s3devvmsetup/lustre/{{ lustre_client_rpm }}
    - /tmp/s3devvmsetup/lustre/{{ lustre_client_devel_rpm }}
    - /tmp/s3devvmsetup/lustre/{{ kmod_lustre_client_rpm }}

- name: Configure lnet
  template:
    src: templates/lnet.conf
    dest: /etc/modprobe.d/lnet.conf

- name: Add the lnet module
  modprobe:
    name: lnet
    state: present

- name: Enable modprobe lnet on reboot
  lineinfile:
    path: /etc/modules-load.d/lnet.conf
    line: 'lnet'
    create: yes

- name: Configure lnet
  command: lctl net up

- name: Enable lnet up on reboot
  lineinfile:
    path: /etc/profile
    line: 'lctl net up'

- name: Test lnet
  command: lctl list_nids

- name: Install development utils and setup epel repo
  yum: pkg={{item}} state=installed
  with_items:
    - git
    - wget
    - epel-release

- name: Install mero development utils
  yum: pkg={{item}} state=installed
  with_items:
    - asciidoc
    - attr
    - autoconf
    - automake
    - binutils-devel
    - expect
    - facter
    - gcc
    - gcc-c++
    - gccxml
    - cmake
    - genders
    - glibc-headers
    - libaio-devel
    - libtool
    - libuuid-devel
    - libyaml
    - libyaml-devel
    - perl-autodie
    - perl-File-Find-Rule
    - perl-File-Slurp
    - perl-IO-All
    - perl-List-MoreUtils
    - perl-XML-LibXML
    - perl-YAML-LibYAML
    - psmisc
    - python-devel
    - python-ply
    - PyYAML
    - rpm-build
    - ruby
    - rubygem-net-ssh
    - systemd-devel
    - time

- name: Install S3 development build tools
  yum: pkg={{item}} state=installed
  with_items:
    - java-1.8.0-openjdk
    - java-1.8.0-openjdk-devel
    - epel-release
    - maven
    - unzip
    - clang

- name: Update to latest selinux-policy (required by latest openldap)
  yum: pkg={{item}} state=latest
  with_items:
    - selinux-policy

- name: Install S3 development runtime dependencies
  yum: pkg={{item}} state=installed
  with_items:
    - libuv-devel
    - openldap-servers
    - openldap-clients
    - zlib-devel

- name: Install S3 development build time dependencies
  yum: pkg={{item}} state=installed
  with_items:
    - openssl
    - openssl-libs
    - openssl-devel
    - libxml2
    - libxml2-devel
    - libyaml
    - libyaml-devel
    - yaml-cpp
    - yaml-cpp-devel
    - gflags
    - gflags-devel
    - glog
    - glog-devel

- name: Install Python and dependencies
  yum: pkg={{item}} state=installed
  with_items:
    - python34
    - python34-pip
    - python34-setuptools
    - python34-dateutil
    - python34-devel
    - python34-yaml
    # - xmltodict
    # - boto3
    # - botocore
    - python34-scripttest

- name: Install python modules to build python34 dependencies
  yum: pkg={{item}} state=installed
  with_items:
    - pytest
    - python-jsonschema
    - python-keyring
    - python-nose
    - python34-nose
    - python-mock
    - python-wheel
    - python2-botocore
    - python2-jmespath
    - python-futures
    - python2-s3transfer
    - python34-mock

- name: Install python modules required by S3 system tests and s3 (iam) auth cli
  yum: pkg={{item}} state=installed
  with_items:
    - /tmp/s3-deps/{{ python34_wheel_rpm }}
    - /tmp/s3-deps/{{ python34_jmespath_rpm }}
    - /tmp/s3-deps/{{ python34_xmltodict_rpm }}
    - /tmp/s3-deps/{{ python34_botocore_rpm }}
    - /tmp/s3-deps/{{ python34_s3transfer_rpm }}
    - /tmp/s3-deps/{{ python34_boto3_rpm }}

- name: Add mappings to /etc/hosts
  blockinfile:
    path: /etc/hosts
    block: |
      {{ item.ip }} {{ item.name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  with_items:
    - { name: seagatebucket.s3.seagate.com, ip: 127.0.0.1 }
    - { name: seagate-bucket.s3.seagate.com, ip: 127.0.0.1 }
    - { name: seagatebucket123.s3.seagate.com, ip: 127.0.0.1 }
    - { name: seagate.bucket.s3.seagate.com, ip: 127.0.0.1 }
    - { name: s3-us-west-2.seagate.com, ip: 127.0.0.1 }
    - { name: seagatebucket.s3-us-west-2.seagate.com, ip: 127.0.0.1 }
    - { name: iam.seagate.com, ip: 127.0.0.1 }
    - { name: sts.seagate.com, ip: 127.0.0.1 }
    - { name: s3.seagate.com, ip: 127.0.0.1 }

- name: Install nginx
  yum:
    name: nginx
    state: present

- name: Enable http port in selinux
  command: setsebool httpd_can_network_connect on -P
  when: ansible_selinux.status == "enabled"

- name: Setup nginx config
  copy:
    src: ./files/nginx/nginx.conf.seagate
    dest: /etc/nginx/nginx.conf
  notify:
    - restart nginx

- name: Install bazel rpm
  yum:
    name: /tmp/s3-deps/{{ bazel_rpm }}
    state: present

- name: Install patched s3cmd
  yum:
    name: /tmp/s3-deps/{{ s3cmd_patched_rpm }}
    state: present

- name: Install gtest and gtest-devel rpm
  yum: pkg={{item}} state=installed
  with_items:
    - /tmp/s3-deps/{{ gtest_rpm }}
    - /tmp/s3-deps/{{ gtest_devel_rpm }}

- name: Install gmock and gmock-devel rpm
  yum: pkg={{item}} state=installed
  with_items:
    - /tmp/s3-deps/{{ gmock_rpm }}
    - /tmp/s3-deps/{{ gmock_devel_rpm }}

- name: Install git_clang_format_rpm rpm
  yum: pkg={{item}} state=installed
  with_items:
    - /tmp/s3-deps/{{ git_clang_format_rpm }}

- name: Install tools for ST
  yum: pkg={{item}} state=installed
  with_items:
    - /tmp/s3-deps/{{ ossperf_rpm }}
    - parallel
    - bc
    - coreutils

s3cmd_spec.py :

What does it test:
- create bucket
- List buckets
- Create objects of size 3k, 8k and 700k.
- Download objects of size 3k, 8k and 700k.
- List objects
- List objects with specific starting pattern
- Delete objects.
- Delete Buckets.
- All above under 2 scenarios: pathstyle s3 uri and virtualhoststyle s3 uri

auth_spec.py :

What does it test:
- Create account
- Create, Delete, List and Update User
- Create, Delete, List and Update Access Key
- Create, Delete and List Roles
- Create, Delete, List and Update SAML Provider
- Get Federation Token.

Assumptions:
You have clean setup without a test bucket name 'seagatebucket', 'seagate-bucket'
and 'SEAGATEBUCKET123'.
Following access key pair is assumed, if your setup has different,
please update below mentioned s3cfg files.

System tests for auth server uses the python client 'pyclient'.
Ensure you have all the dependencies installed for pyclient.

Python Version 3.5 (package name - python3.5) and virtualenv are required.

How to setup virtual env?
- Run setup.sh as root user to setup virtual env with dependencies.
Note - virtual env directory "mero_st" gets created in current directory.

            Or

- Install virtual env via pip
sudo pip install virtualenv

- Go to the directory where you want to create virtual environment directory.
Ex - cd /home/seagate

- Create a new virtual env called mero_st which uses python3.5
sudo virtualenv -p /usr/local/bin/python3.5 mero_st

- Change the python source via virtualenv
sudo source mero_st/bin/activate

- To deacticate virtual env run
sudo deactivate mero_st

Dependencies:
Run the following to install the dependencies in the following order.
sudo pip install python-dateutil==2.4.2
sudo pip install pyyaml==3.11
sudo pip install xmltodict==0.9.2
sudo pip install boto3==1.2.2
sudo pip install botocore==1.3.8
sudo pip install scripttest==1.3

Build Jcloud and Jclient and copy jcloud.jar and jclient.jar to the
current directory i.e st/clitests from the respective build directories.

Configuration:
cfg directory contains configuration files used by some system tests.
Edit corresponding configuration file to modify adjustable parameters
eg: To configure Mero-KVS as backend for System Test runs set S3_CLOVIS_IDX_SERVICE_ID: 1
```sh
cd cfg/
edit cloviskvscli.yaml
```

How to run?
- Ensure you have s3server, auth server and mero running with test data.
- Update access keys in pathstyle.s3cfg and virtualhoststyle.s3cfg if required.
- Update /etc/hosts file to add following entry for tests.
  127.0.0.1 seagatebucket.s3.seagate.com s3.seagate.com
  127.0.0.1 seagate-bucket.s3.seagate.com seagatebucket123.s3.seagate.com seagate.bucket.s3.seagate.com
  127.0.0.1 s3-us-west-2.seagate.com seagatebucket.s3-us-west-2.seagate.com
  127.0.0.1 iam.seagate.com sts.seagate.com
- Ensure you have sourced mero_st (python version 3.5) with virtualenv.
- If you are not running as root add user to /etc/sudoers file
  - Run visudo to edit the /etc/sudoers file
  - Find section "User privilege specification". Add below line under it
  - <some_user> ALL=(ALL) NOPASSWD:ALL
  - Note: Warning: This gives super user privilege to all commands when invoked as sudo.
- Add s3server binary path to sudo secure path
  - Run visudo to edit the /etc/sudoers file
  - Find line with variable "secure_path". Edit to add below path
  - /opt/seagate/s3/bin
- cd to clitests directory
- Note: For Dev environment, we use mero libs built from the source code. So before executing
  standalone systems tests or runallsystest.sh, export LD_LIBRARY_PATH variable pointing it
  to the source code mero libs location as below:
  # export LD_LIBRARY_PATH="$(pwd)/../../third_party/mero/mero/.libs/:$(pwd)/../../third_party/mero/extra-libs/gf-complete/src/.libs/"

  After the tests are done, unset the LD_LIBRARY_PATH variable as below:
  # unset LD_LIBRARY_PATH
- To verify setup and execute standard systests (auth, s3cmd, jclient and jcloud )
- run runallsystest.sh
- To execute system tests as standalone
- run $python auth_spec.py
- run $python s3cmd_spec.py
- run $python jclient_spec.py
- run $python jcloud_spec.py
- To unset the LD_LIBRARY_PATH variable run `unset LD_LIBRARY_PATH`

Notes:
 - To get execution time in milli seconds (parsable format), make the
following change in the test script (ex - s3cmd_spec.py) before running the tests
set
   Config.time_readable_format = False

 - To run auth_spec.py over HTTPS connection only, pass --https-only param to script
    $ python auth_spec.py --https-only
 - To run auth_spec.py over both HTTP and HTTPS connections, pass --all param to script
    $ python auth_spec.py --all
